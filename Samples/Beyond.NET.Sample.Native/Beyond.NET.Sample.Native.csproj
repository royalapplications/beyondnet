<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>libBeyondDotNETSampleNative</AssemblyName>
    <OutputType>Library</OutputType>
    <TargetFramework>net10.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <PublishTrimmed>true</PublishTrimmed>
    <PublishAot>true</PublishAot>
    <DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>
    <EnablePreviewFeatures>true</EnablePreviewFeatures>
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>

    <!-- Allow experimental APIs (https://learn.microsoft.com/en-us/dotnet/fundamentals/runtime-libraries/preview-apis) -->
    <NoWarn>$(NoWarn);SYSLIB5006</NoWarn>

    <!-- TODO: Disabled for now to get faster build times -->
    <Nullable>disable</Nullable>

    <!-- Seems to not be required as long as we're providing the RuntimeIdentifier when calling dotnet publish/build -->
    <!-- <RuntimeIdentifiers>osx-x64;osx-arm64;linux-x64;ios-arm64;iossimulator-arm64;iossimulator-x64</RuntimeIdentifiers> -->

    <!-- WIP: Experimental -->
    <MixInSwift>false</MixInSwift>
  </PropertyGroup>

  <PropertyGroup>
    <MacOSMinVersion>13.0</MacOSMinVersion>
    <iOSMinVersion>16.0</iOSMinVersion>
  </PropertyGroup>

  <!-- Compiler Customization -->
  <!-- TODO / WIP -->
  <!-- Include pre-compiled Swift stuff -->
  <Choose>
    <When Condition="$(MixInSwift) And ($(RuntimeIdentifier.Contains('osx')) Or $(RuntimeIdentifier.Contains('ios')))">
<!--      <PropertyGroup>-->
<!--         <ExportsFile>/Users/fx/Development/DotNET/beyondnet/Samples/Generated/bin/apple/osx-arm64/libBeyondDotNETSampleNative.exports</ExportsFile> -->
<!--      </PropertyGroup>-->

      <ItemGroup>
        <LinkerArg Include="-Wl,-force_load,../Generated/bin/apple/$(RuntimeIdentifier)/$(AssemblyName).a" />
        <LinkerArg Include="-fmodules -fmodule-map-file=../Generated/module_clang.modulemap" />

        <LinkerArg Include="-exported_symbols_list ../Generated/bin/apple/$(RuntimeIdentifier)/$(AssemblyName).exports" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- Set min macOS version -->
  <Choose>
    <When Condition="$(RuntimeIdentifier.Contains('osx'))">
      <ItemGroup>
        <LinkerArg Include="-mmacosx-version-min=$(MacOSMinVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="$(RuntimeIdentifier.Contains('ios'))">
      <ItemGroup>
        <!-- Link to Swift on iOS (it's automatic when targeting macOS) -->
        <LinkerArg Include="-L/usr/lib/swift" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- TODO: Temporary workarounds for iOS/iOS Simulator support -->
  <Choose>
    <When Condition="$(RuntimeIdentifier.Contains('ios'))">
      <PropertyGroup>
        <PublishAotUsingRuntimePack>true</PublishAotUsingRuntimePack>
        <_IsAppleMobileLibraryMode>false</_IsAppleMobileLibraryMode>
      </PropertyGroup>
    </When>
  </Choose>

  <Choose>
    <When Condition="$(RuntimeIdentifier.Contains('iossimulator'))">
      <ItemGroup>
        <!-- TODO: Temporary workaround for iOS Simulator support -->
        <LinkerArg Include="-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk" />

        <!-- Set min iOS version -->
        <LinkerArg Include="-mios-simulator-version-min=$(iOSMinVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- TODO: Temporary workarounds for iOS support -->
  <Choose>
    <When Condition="$(RuntimeIdentifier.Contains('ios-'))">
      <ItemGroup>
        <!-- TODO: Temporary workaround for iOS support -->
        <LinkerArg Include="-isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk" />

        <!-- Set min iOS version -->
        <LinkerArg Include="-mios-version-min=$(iOSMinVersion)" />
      </ItemGroup>
    </When>
  </Choose>

  <!-- TODO: Temporary workarounds for Android support -->
  <ItemGroup Condition="$(RuntimeIdentifier.StartsWith('linux-bionic'))">
    <LinkerArg Include="-Wl,--undefined-version" />
  </ItemGroup>

  <!-- Strip Symbols in Release Builds -->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <StripSymbols>true</StripSymbols>
  </PropertyGroup>

  <!-- Item Excludes -->
  <PropertyGroup>
    <DefaultItemExcludes>$(DefaultItemExcludes);.gitignore;*.sln.DotSettings;</DefaultItemExcludes>
  </PropertyGroup>

  <!-- Project References -->
  <ItemGroup>
    <ProjectReference Include="..\Beyond.NET.Sample.Managed\Beyond.NET.Sample.Managed.csproj" />
  </ItemGroup>

</Project>
